import pygame
import random
import time
from os import path

WIDTH = 800 # Largura da tela
HEIGHT = 800 # Altura da tela
FPS = 320 # Frames por segundo

# Cores
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)

#Pastas para diretorio de imagem, sons e fonte
img_dir = path.join(path.dirname(__file__), 'img')
snd_dir = path.join(path.dirname(__file__), 'snd')
fnt_dir = path.join(path.dirname(__file__), 'font')

cima = 0
direita = 1
baixo = 2
esquerda = 3

pygame.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("MultiSnake")
clock = pygame.time.Clock()

def draw_text(surf, text, size, x, y):
    font = pygame.font.Font(font_name, size)
    text_surface = font.render(text, True, WHITE)
    text_rect = text_surface.get_rect()
    text_rect.midtop = (x, y)
    surf.blit(text_surface, text_rect)

class Snake(pygame.sprite.Sprite):
    def __init__(self):

        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.image.load(path.join(img_dir, "cabeca_direita.png")).convert()

        self.image = pygame.transform.scale(self.image, (25, 25))

        self.image.set_colorkey(BLACK)

        self.rect = self.image.get_rect()
        self.rect.x = WIDTH/2
        self.rect.y = HEIGHT/2
        self.speedx = 1
        self.speedy = 0

    def atualiza(self, direcao):
        if direcao == 0:
            self.image = pygame.image.load(path.join(img_dir, "cabeca_baixo.png")).convert()
            self.image = pygame.transform.scale(self.image, (25, 25))
            self.image.set_colorkey(BLACK)


        elif direcao == 2:
            self.image = pygame.image.load(path.join(img_dir, "cabeca_cima.png")).convert()
            self.image = pygame.transform.scale(self.image, (25, 25))
            self.image.set_colorkey(BLACK)

        elif direcao == 1:
            self.image = pygame.image.load(path.join(img_dir, "cabeca_direita.png")).convert()
            self.image = pygame.transform.scale(self.image, (25, 25))
            self.image.set_colorkey(BLACK)

        elif direcao == 3:
            self.image = pygame.image.load(path.join(img_dir, "cabeca_esquerda.png")).convert()
            self.image = pygame.transform.scale(self.image, (25, 25))
            self.image.set_colorkey(BLACK)


    def update(self):
        self.rect.x += self.speedx
        self.rect.y += self.speedy


class Rabo(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.image.load(path.join(img_dir, "rabo_direita.png")).convert()

        self.image = pygame.transform.scale(self.image, (25, 25))

        self.image.set_colorkey(BLACK)

        self.rect = self.image.get_rect()

        self.rect.x = snake.rect.x - 25
        self.rect.y = snake.rect.y
        self.speedx =snake.speedx
        self.speedy = snake.speedy

    def atualiza(self, direcao):
        if direcao == 0:
            self.image = pygame.image.load(path.join(img_dir, "rabo_baixo.png")).convert()
            self.image = pygame.transform.scale(self.image, (25, 25))
            self.image.set_colorkey(BLACK)
            self.rect.x = snake.rect.x
            self.rect.y = snake.rect.y - 25


        elif direcao == 2:
            self.image = pygame.image.load(path.join(img_dir, "rabo_cima.png")).convert()
            self.image = pygame.transform.scale(self.image, (25, 25))
            self.image.set_colorkey(BLACK)
            self.rect.x = snake.rect.x
            self.rect.y = snake.rect.y + 25

        elif direcao == 1:
            self.image = pygame.image.load(path.join(img_dir, "rabo_direita.png")).convert()
            self.image = pygame.transform.scale(self.image, (25, 25))
            self.image.set_colorkey(BLACK)
            self.rect.x = snake.rect.x - 25
            self.rect.y = snake.rect.y

        elif direcao == 3:
            self.image = pygame.image.load(path.join(img_dir, "rabo_esquerda.png")).convert()
            self.image = pygame.transform.scale(self.image, (25, 25))
            self.image.set_colorkey(BLACK)
            self.rect.x = snake.rect.x + 25
            self.rect.y = snake.rect.y

    def update(self):
        self.rect.x += self.speedx
        self.rect.y += self.speedy


class Apple(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)

        self.image = pygame.image.load(path.join(img_dir, "coelho_Snake.png")).convert()

        self.image = pygame.transform.scale(self.image, (25, 25))

        self.image.set_colorkey(BLACK)

        self.rect = self.image.get_rect()

        self.rect.x = random.randint(0, 775)
        self.rect.y = random.randint(0, 775)
        self.speedx = 0
        self.speedy = 0


snake = Snake()
coelho = Apple()

all_sprites = pygame.sprite.Group()
all_sprites.add(snake)
all_sprites.add(coelho)

macas = pygame.sprite.Group()
macas.add(coelho)


try:
    i = True
    contador_rabo = 0

    while i:

        clock.tick(FPS)

        # Limita o movimento da cobra na tela
        if snake.rect.right > WIDTH:
            i = False
            continue
        if snake.rect.left < 0:
            i = False
            continue
        if snake.rect.top < 0:
            i = False
            continue
        if snake.rect.bottom > HEIGHT:
            i = False
            continue

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                i = False


            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_UP:
                    snake.atualiza(2)
                    snake.speedy = -1
                    snake.speedx = 0
                    if contador_rabo >= 1:
                        rabo.atualiza(2)
                        rabo.speedy = -1
                        rabo.speedx = 0

                elif event.key == pygame.K_DOWN:
                    snake.atualiza(0)
                    snake.speedy = 1
                    snake.speedx = 0
                    if contador_rabo >= 1:
                        rabo.atualiza(0)
                        rabo.speedy = 1
                        rabo.speedx = 0

                elif event.key == pygame.K_LEFT:
                    snake.atualiza(3)
                    snake.speedx = -1
                    snake.speedy = 0
                    if contador_rabo >= 1:
                        rabo.atualiza(3)
                        rabo.speedy = 0
                        rabo.speedx = -1


                elif event.key == pygame.K_RIGHT:
                    snake.atualiza(1)
                    snake.speedx = 1
                    snake.speedy = 0
                    if contador_rabo >= 1:
                        rabo.atualiza(1)
                        rabo.speedy = 0
                        rabo.speedx = 1

        all_sprites.update()

        hits = pygame.sprite.spritecollide(snake, macas, False, pygame.sprite.collide_circle)

        if hits:
            contador_rabo += 1

            coelho.kill()
            coelho = Apple()
            all_sprites.add(coelho)
            macas.add(coelho)

            if contador_rabo == 1:
                rabo = Rabo()
                all_sprites.add(rabo)


        screen.fill(BLACK)
        all_sprites.draw(screen)
        macas.draw(screen)

        pygame.display.flip()
finally:
    pygame.quit()
