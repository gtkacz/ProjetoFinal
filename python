import pygame
import random

pygame.init()
pygame.mixer.init()

WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (14, 209, 69)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)
ORANGE = (224, 81, 18)

WIDTH = 800
HEIGHT = 600
FPS = 5

screen = pygame.display.set_mode((WIDTH, HEIGHT))

cabeca = pygame.image.load('cabeca.png')
coelho = pygame.image.load('coelho.png')
fundo = pygame.image.load('ground.png')

cabeca = pygame.transform.scale(cabeca, (20, 20))
coelho = pygame.transform.scale(coelho, (20, 20))
fundo = pygame.transform.scale(fundo, (WIDTH, HEIGHT))

pygame.display.flip()
clock = pygame.time.Clock()

lado_bloco = 20
lado_coelho = 20

direcao = "direita"

fonte_pequena = pygame.font.SysFont("comicsansms", 24)
fonte_media = pygame.font.SysFont("comicsansms", 48)
fonte_grande = pygame.font.SysFont("comicsansms", 72)

def pause():
    pausado = True
    message_to_screen("Pausado", WHITE, -100, "gde")
    message_to_screen("Aperte Espa√ßo para continuar ou Esc para sair.", WHITE, 25)
    pygame.display.update()

    while pausado:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.QUIT()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    pausado = False

                elif event.key == pygame.K_ESCAPE:
                    pygame.quit()
                    quit()
        clock.tick(FPS)


def score(numero):
    texto = fonte_pequena.render("Score: {0}".format(str(numero)), True, WHITE)
    screen.blit(texto, [0, 0])


def gerador_coelho():
    x_coelho = round(random.randrange(lado_coelho, WIDTH - lado_coelho))
    y_coelho = round(random.randrange(lado_coelho, HEIGHT - lado_coelho))
    return x_coelho, y_coelho

rand_coelho_x = gerador_coelho()[0]
rand_coelho_y = gerador_coelho()[1]


def snake(lado, lista_cobra):
    if direcao == "direita":
        cabeca_cobra = pygame.transform.rotate(cabeca, 270)
    if direcao == "esquerda":
        cabeca_cobra = pygame.transform.rotate(cabeca, 90)
    if direcao == "cima":
        cabeca_cobra = cabeca
    if direcao == "baixo":
        cabeca_cobra = pygame.transform.rotate(cabeca, 180)
    screen.blit(cabeca_cobra, (lista_cobra[-1][0], lista_cobra[-1][1]))

    for x_y in lista_cobra[:-1]:
        pygame.draw.rect(screen, GREEN,
                         [x_y[0], x_y[1], lado, lado])
